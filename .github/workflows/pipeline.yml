#
# file: build-test.yml
#
# author: Copyright (C) 2021-2024 Kamil Szczygiel https://distortec.com https://freddiechopin.info
#
# This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not
# distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
#

name: Build distortos

on:
  push
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
        - 14.1.0-240616
    steps:
    - uses: actions/checkout@v4
    - name: Install bleeding-edge-toolchain
      shell: bash
      working-directory: /tmp
      run: |
        wget --progress=dot:giga https://distortos.org/files/ci/arm-none-eabi-gcc-${{matrix.toolchain}}.tar.xz
        tar -xf arm-none-eabi-gcc-${{matrix.toolchain}}.tar.xz
        echo "$(cd arm-none-eabi-gcc-${{matrix.toolchain}}/bin && pwd)" >> $GITHUB_PATH
    - name: Install Dependencies
      shell: bash
      run: |
        sudo apt update
        sudo apt install ninja-build
    - name: Build
      shell: bash
      run: ./scripts/buildAllConfigurations.sh configurations distortosTest

  test-board-generator:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.x
      uses: actions/setup-python@v5
      with:
        python-version: 3.x
    - name: Install Dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install jinja2 ruamel.yaml
    - name: Generate Boards
      shell: bash
      run: |
        for yamlFile in $(/usr/bin/find -L "${GITHUB_WORKSPACE}/source/board" -name '*.yaml')
        do
          ${GITHUB_WORKSPACE}/scripts/generateBoard.py ${yamlFile}
        done

        git add -N .
        git diff --exit-code
    - name: Generate "Raw" Boards
      shell: bash
      run: |
        for yamlFile in $(/usr/bin/find -L "${GITHUB_WORKSPACE}/source/chip" -name '*.yaml')
        do
          ${GITHUB_WORKSPACE}/scripts/generateBoard.py ${yamlFile} -o /tmp/$(basename ${yamlFile} .yaml)
        done

  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Dependencies
      shell: bash
      run: |
        sudo apt update
        sudo apt install gcc-10 g++-10 ninja-build
    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/output
    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/output
      env:
        CC:   gcc-10
        CXX:  g++-10
      run: cmake -G Ninja ${GITHUB_WORKSPACE}/unit-test
    - name: Build
      shell: bash
      working-directory: ${{github.workspace}}/output
      run: cmake --build . --target all
    - name: Run
      shell: bash
      working-directory: ${{github.workspace}}/output
      run: cmake --build . --target run

